{{- if eq .chezmoi.os "windows" -}}

# Define the path to the folder containing the font files
$sourceFolder = "$env:USERPROFILE\.local\share\fonts"
$fontsDir = "$env:USERPROFILE\AppData\Local\Microsoft\Windows\Fonts"

# Create the Fonts directory if it doesn't exist
if (-not (Test-Path -Path $fontsDir)) {
    New-Item -ItemType Directory -Path $fontsDir
}

# Get all font files in the source folder
$fontFiles = Get-ChildItem -Path $sourceFolder -Filter *.ttf, *.otf

foreach ($fontFile in $fontFiles) {
    # Get the font file name
    $fontFileName = $fontFile.Name
    $destinationPath = Join-Path -Path $fontsDir -ChildPath $fontFileName

    # Check if the font file already exists in the Fonts directory
    if (-not (Test-Path -Path $destinationPath)) {
        # Copy the font file to the Fonts directory
        Copy-Item -Path $fontFile.FullName -Destination $fontsDir

        # Register the font in the Windows registry
        $fontName = [System.IO.Path]::GetFileNameWithoutExtension($fontFileName)
        $regPath = "HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Fonts"
        if (-not (Get-ItemProperty -Path $regPath -Name $fontName -ErrorAction SilentlyContinue)) {
            Set-ItemProperty -Path $regPath -Name $fontName -Value $fontFileName
        }
    }
}

# Refresh the font cache
Add-Type -TypeDefinition @"
using System;
using System.Runtime.InteropServices;
public class User32 {
    [DllImport("user32.dll", SetLastError = true)]
    public static extern int SendMessage(int hWnd, int hMsg, int wParam, int lParam);
}
"@
[User32]::SendMessage(0xFFFF, 0x001D, 0, 0)

Write-Output "Fonts installed successfully."
{{ end -}}
