# XDG Base Directory
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Initialize homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

source $ZSH/oh-my-zsh.sh

export ZPLUG_HOME=/opt/homebrew/opt/zplug
source $ZPLUG_HOME/init.zsh

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    zplug install
fi

# install powerlevel10k
zplug "romkatv/powerlevel10k", as:theme, depth:1
# oh-my-zsh plugins
zplug plugins/git,   from:oh-my-zsh, defer:3
zplug plugins/z,   from:oh-my-zsh
# defer means to load this plugin after all the other plugins
zplug zdharma-continuum/fast-syntax-highlighting, defer:2
# command auto-suggestion based on history
zplug zsh-users/zsh-autosuggestions

# let zplug manage itself
zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# Then, source plugins and add commands to $PATH
zplug load

# Source all feature zsh definitions
for file in $HOME/.config/**/*.zsh; do
    source "$file"
done

# Source all feature alias definitions
for file in $HOME/.config/**/*.alias; do
    source "$file"
done

# Set preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='code'
fi

export VISUAL='code'

# set proper language locales
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Custom root cert handling
# Make sure ruby apps use global trust store
export SSL_CERT_FILE="/etc/ssl/cert.pem"
# Make sure curl uses global trust store
export CURL_CA_BUNDLE="/etc/ssl/cert.pem"
# Make sure nodejs apps use global trust store
export NODE_EXTRA_CA_CERTS="/etc/ssl/cert.pem"
# Make sure python apps use global trust store
export REQUESTS_CA_BUNDLE="/etc/ssl/cert.pem"
